{"version":3,"sources":["Components/Filter.tsx","services/api.ts","Components/PersonForm.tsx","Components/Persons.tsx","Components/Notifications.tsx","App.tsx","index.tsx"],"names":["Filter","setFilter","onChange","e","target","value","toLowerCase","url","getAllPeople","a","axios","get","response","console","log","data","addPerson","person","post","updatePerson","patch","id","deletePerson","delete","PersonForm","setPersons","persons","setNotification","useState","newName","setNewName","newPhone","setNewPhone","handleSubmit","preventDefault","message","type","search","find","name","number","newPerson","concat","updatedPerson","filter","window","alert","onSubmit","Persons","handleClick","p","includes","map","i","onClick","baseStyle","border","width","backgroundColor","padding","marginBottom","borderRadius","styles","add","borderColor","update","remove","error","Notifications","notification","style","App","useEffect","people","handleSetNotification","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"4MAYeA,EATA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAChB,OACE,mDACmB,IACjB,uBAAOC,SAAU,SAACC,GAAD,OAAOF,EAAUE,EAAEC,OAAOC,MAAMC,sB,uBCJjDC,EAAM,eAECC,EAAY,uCAAG,4BAAAC,EAAA,sEACHC,IAAMC,IAAIJ,GADP,cACpBK,EADoB,OAE1BC,QAAQC,IAAIF,GAFc,kBAGnBA,EAASG,MAHU,2CAAH,qDAMZC,EAAS,uCAAG,WAAOC,GAAP,eAAAR,EAAA,sEACAC,IAAMQ,KAAKX,EAAKU,GADhB,cACjBL,EADiB,yBAEhBA,EAASG,MAFO,2CAAH,sDAKTI,EAAY,uCAAG,WAAOF,GAAP,eAAAR,EAAA,sEACHC,IAAMU,MAAN,UAAeb,EAAf,YAAsBU,EAAOI,IAAMJ,GADhC,cACpBL,EADoB,yBAEnBA,EAASG,MAFU,2CAAH,sDAKZO,EAAY,uCAAG,WAAOL,GAAP,SAAAR,EAAA,+EAElBC,IAAMa,OAAN,UAAgBhB,EAAhB,YAAuBU,EAAOI,KAFZ,+EAIjB,SAJiB,wDAAH,sDCoCVG,EArDI,SAAC,GAII,IAHtBC,EAGqB,EAHrBA,WACAC,EAEqB,EAFrBA,QACAC,EACqB,EADrBA,gBACqB,EACSC,mBAAS,IADlB,mBACdC,EADc,KACLC,EADK,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,KAIfC,EAAY,uCAAG,WAAO9B,GAAP,mBAAAM,EAAA,yDACnBN,EAAE+B,iBACGH,GAAaF,GAChBF,EAAgB,CAAEQ,QAAS,2BAA4BC,KAAM,UAEzDC,EAASX,EAAQY,MAAK,SAACrB,GAAD,OAAYA,EAAOsB,OAASV,KALrC,gCAOOb,EAAU,CAAEuB,KAAMV,EAASW,OAAQT,IAP1C,cAOXU,EAPW,OAQjBd,EAAgB,CAAEQ,QAAQ,SAAD,OAAWM,EAAUF,MAAQH,KAAM,QAR3C,kBASVX,EAAWC,EAAQgB,OAAOD,KAThB,UAWfJ,EAAOG,SAAWT,EAXH,kCAYWZ,EAAa,2BAAKkB,GAAN,IAAcG,OAAQT,KAZ7C,eAYXY,EAZW,OAajBlB,EACEC,EACGkB,QAAO,SAAC3B,GAAD,OAAYA,EAAOI,KAAOsB,EAActB,MAC/CqB,OAAOC,IAGZhB,EAAgB,CACdQ,QAAQ,WAAD,OAAaQ,EAAcJ,MAClCH,KAAM,WArBS,2BAyBnBS,OAAOC,MAAP,UAAgBjB,EAAhB,uCAzBmB,4CAAH,sDA4BlB,OACE,uBAAMkB,SAAUd,EAAhB,UACE,wCACQ,IACN,uBAAO/B,SAAU,SAACC,GAAD,OAAO2B,EAAW3B,EAAEC,OAAOC,QAAQA,MAAOwB,OAE7D,yCACS,IACP,uBAAO3B,SAAU,SAACC,GAAD,OAAO6B,EAAY7B,EAAEC,OAAOC,QAAQA,MAAO0B,OAE9D,8BACE,wBAAQK,KAAK,SAAb,uBCfOY,EAjCC,SAAC,GAKI,IAJnBtB,EAIkB,EAJlBA,QACAkB,EAGkB,EAHlBA,OACAnB,EAEkB,EAFlBA,WACAE,EACkB,EADlBA,gBAEMsB,EAAW,uCAAG,WAAOhC,GAAP,eAAAR,EAAA,6DAClBgB,EAAWC,EAAQkB,QAAO,SAACM,GAAD,OAAOA,EAAE7B,KAAOJ,EAAOI,OAD/B,SAEKC,EAAaL,GAFlB,OAEZL,EAFY,OAIhBe,EADe,UAAbf,EACc,CAAEuB,QAAQ,WAAD,OAAalB,EAAOsB,MAAQH,KAAM,UAE3C,CACdD,QAAQ,kBAAD,OAAoBlB,EAAOsB,KAA3B,qCACPH,KAAM,UARQ,2CAAH,sDAajB,OACE,mCACGV,EACEkB,QAAO,SAAC3B,GAAD,OAAYA,EAAOsB,KAAKjC,cAAc6C,SAASP,GAAU,OAChEQ,KAAI,SAACnC,EAAQoC,GAAT,OACH,gCACGpC,EAAOsB,KADV,MACmBtB,EAAOuB,OAAQ,IAChC,wBAAQc,QAAS,kBAAML,EAAYhC,IAAnC,sBAFQoC,SCZdE,EAA4B,CAChCC,OAAQ,QACRC,MAAO,cACPC,gBAAiB,YACjBC,QAAS,OACTC,aAAc,OACdC,aAAc,QAqBVC,EAAS,CACbC,IApBuB,2BACpBR,GADoB,IAEvBS,YAAa,UAmBbC,OAhB0B,2BACvBV,GADuB,IAE1BS,YAAa,gBAebE,OAZ0B,eACvBX,GAYHY,MATyB,2BACtBZ,GADsB,IAEzBS,YAAa,SAUAI,EA7CO,SAAC,GAEG,IAAD,IADvBC,aAAgBlC,EACO,EADPA,QAASC,EACF,EADEA,KAEzB,OAAKD,EAEH,qBAAKmC,MAAOR,EAAO1B,GAAnB,SACE,8BAAMD,MAHW,MC4CRoC,EA3CH,WAAO,IAAD,EACc3C,mBAAmB,IADjC,mBACTF,EADS,KACAD,EADA,OAEYG,mBAAS,IAFrB,mBAETgB,EAFS,KAED3C,EAFC,OAGwB2B,mBAA8B,MAHtD,mBAGTyC,EAHS,KAGK1C,EAHL,KAKhB6C,qBAAU,WACR,sBAAC,4BAAA/D,EAAA,6DACCI,QAAQC,IAAI,sBADb,SAEsBN,IAFtB,OAEOiE,EAFP,OAIChD,EAAWgD,GAJZ,0CAAD,KAMC,IAEH,IAAMC,EAAwB,SAACL,GAC7B1C,EAAgB0C,GAChBM,YAAW,WACThD,EAAgB,QACf,MAGL,OACE,sBAAK2C,MAAO,CAAEX,QAAS,KAAvB,UACE,2CACCU,GAAgB,cAAC,EAAD,CAAeA,aAAcA,IAC9C,cAAC,EAAD,CAAQpE,UAAWA,IACnB,2CACA,cAAC,EAAD,CACEwB,WAAYA,EACZC,QAASA,EACTC,gBAAiB+C,IAEnB,yCACA,cAAC,EAAD,CACEjD,WAAYA,EACZC,QAASA,EACTkB,OAAQA,EACRjB,gBAAiB+C,QCxCzBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.becc35ed.chunk.js","sourcesContent":["import React from 'react'\nimport { FilterProps } from '../types'\n\nconst Filter = ({ setFilter }: FilterProps) => {\n  return (\n    <div>\n      filter show with{' '}\n      <input onChange={(e) => setFilter(e.target.value.toLowerCase())} />\n    </div>\n  )\n}\n\nexport default Filter\n","import axios from 'axios';\nimport { Person, NewPerson } from '../types';\n\nconst url = '/api/persons';\n\nexport const getAllPeople = async (): Promise<Person[]> => {\n  const response = await axios.get(url);\n  console.log(response);\n  return response.data;\n};\n\nexport const addPerson = async (person: NewPerson): Promise<Person> => {\n  const response = await axios.post(url, person);\n  return response.data;\n};\n\nexport const updatePerson = async (person: Person): Promise<Person> => {\n  const response = await axios.patch(`${url}/${person.id}`, person);\n  return response.data;\n};\n\nexport const deletePerson = async (person: Person) => {\n  try {\n    await axios.delete(`${url}/${person.id}`);\n  } catch (error) {\n    return 'error';\n  }\n};\n","import React, { useState } from 'react';\nimport { PersonFormProps } from '../types';\nimport { addPerson, updatePerson } from '../services/api';\n\nconst PersonForm = ({\n  setPersons,\n  persons,\n  setNotification,\n}: PersonFormProps) => {\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newPhone || !newName) {\n      setNotification({ message: 'Name and Number required', type: 'error' });\n    }\n    const search = persons.find((person) => person.name === newName);\n    if (!search) {\n      const newPerson = await addPerson({ name: newName, number: newPhone });\n      setNotification({ message: `Added ${newPerson.name}`, type: 'add' });\n      return setPersons(persons.concat(newPerson));\n    }\n    if (search.number !== newPhone) {\n      const updatedPerson = await updatePerson({ ...search, number: newPhone });\n      setPersons(\n        persons\n          .filter((person) => person.id !== updatedPerson.id)\n          .concat(updatedPerson)\n      );\n\n      setNotification({\n        message: `Updated ${updatedPerson.name}`,\n        type: 'update',\n      });\n      return;\n    }\n    window.alert(`${newName} is already added to the phonebook`);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:{' '}\n        <input onChange={(e) => setNewName(e.target.value)} value={newName} />\n      </div>\n      <div>\n        phone:{' '}\n        <input onChange={(e) => setNewPhone(e.target.value)} value={newPhone} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import { PersonsProps, Person } from '../types'\nimport { deletePerson } from '../services/api'\n\nconst Persons = ({\n  persons,\n  filter,\n  setPersons,\n  setNotification,\n}: PersonsProps) => {\n  const handleClick = async (person: Person) => {\n    setPersons(persons.filter((p) => p.id !== person.id))\n    const response = await deletePerson(person)\n    if (response !== 'error') {\n      setNotification({ message: `Deleted ${person.name}`, type: 'remove' })\n    } else {\n      setNotification({\n        message: `Information of ${person.name} already been removed from server`,\n        type: 'error',\n      })\n    }\n  }\n\n  return (\n    <>\n      {persons\n        .filter((person) => person.name.toLowerCase().includes(filter || ''))\n        .map((person, i) => (\n          <div key={i}>\n            {person.name} : {person.number}{' '}\n            <button onClick={() => handleClick(person)}>delete</button>\n          </div>\n        ))}\n    </>\n  )\n}\n\nexport default Persons\n","import React from 'react'\nimport CSS from 'csstype'\nimport { NotificationProps } from '../types'\n\nconst Notifications = ({\n  notification: { message, type },\n}: NotificationProps) => {\n  if (!message) return null\n  return (\n    <div style={styles[type]}>\n      <div>{message}</div>\n    </div>\n  )\n}\n\nconst baseStyle: CSS.Properties = {\n  border: 'solid',\n  width: 'fit-content',\n  backgroundColor: 'lightgray',\n  padding: '15px',\n  marginBottom: '20px',\n  borderRadius: '12px',\n}\nconst add: CSS.Properties = {\n  ...baseStyle,\n  borderColor: 'green',\n}\n\nconst update: CSS.Properties = {\n  ...baseStyle,\n  borderColor: 'yellowgreen',\n}\n\nconst remove: CSS.Properties = {\n  ...baseStyle,\n}\n\nconst error: CSS.Properties = {\n  ...baseStyle,\n  borderColor: 'red',\n}\n\nconst styles = {\n  add,\n  update,\n  remove,\n  error,\n}\n\nexport default Notifications\n","import { useEffect, useState } from 'react';\nimport { Person, Notification } from './types';\nimport Filter from './Components/Filter';\nimport PersonForm from './Components/PersonForm';\nimport Persons from './Components/Persons';\nimport Notifications from './Components/Notifications';\nimport { getAllPeople } from './services/api';\n\nconst App = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState<Notification | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      console.log('calling for people');\n      const people = await getAllPeople();\n\n      setPersons(people);\n    })();\n  }, []);\n\n  const handleSetNotification = (notification: Notification) => {\n    setNotification(notification);\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  return (\n    <div style={{ padding: 100 }}>\n      <h1>Phonebook</h1>\n      {notification && <Notifications notification={notification} />}\n      <Filter setFilter={setFilter} />\n      <h2>add a new</h2>\n      <PersonForm\n        setPersons={setPersons}\n        persons={persons}\n        setNotification={handleSetNotification}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        setPersons={setPersons}\n        persons={persons}\n        filter={filter}\n        setNotification={handleSetNotification}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}